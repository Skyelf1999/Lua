---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 14563.
--- DateTime: 2022/5/2 14:24
--- 多重继承
---

require("structure")
local Func_type = structure.Func_type
require("test_object_oriented.test_Account")

------------------------------- 类定义 -------------------------------

Named = {}
function Named:getName()
    return self.name
end
function Named:setName(n)
    self.name = n
end
function Named:printName()
    print("name = " .. self.name)
    return
end

------------------------------- 类定义 -------------------------------


------------------------------- 多继承类构造器定义 -------------------------------

-- 在父类列表plist中寻找字段为k的内容
-- 该函数为多重继承类的__index搜索策略
local function search(k, plist)
    --print("开始在父类中搜索对应字段")
    for i=1,#plist do
        local v = plist[i][k]       -- 获取当前遍历到的父类的对应字段
        if v then return v end      -- 获取成功，返回
    end
end


-- 新类构造器：基于输入的类，创造多继承子类
function createClass(...)
    local new_class = {}
    local parents = {...}
    -- 设置多继承类的 元表.__index字段 对应的搜索函数
    setmetatable(new_class,
            {__index = function(t,k)
                return search(k,parents)
            end}
    )
    new_class.__index = new_class
    -- 新类的构造函数
    function new_class:new(o)
        o = o or {}
        setmetatable(o, self)
        return o
    end

    return new_class
end

------------------------------- 多继承类构造器定义 -------------------------------


------------------------------- 多继承类定义 -------------------------------
Func_type("多重继承",true)

-- 继承Account和Name
Named_Account = createClass(Account,Named)
account = Named_Account:new({name="dsh"})
account:printName()
account:deposit(250)
account:printBalance()
account:withdraw(20)
account:printBalance()

Func_type("多重继承",false)
------------------------------- 多继承类定义 -------------------------------













