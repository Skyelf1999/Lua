---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2022/4/21 17:58
---

require("structure")
require("useful")

------------------------------- 定义测试 -------------------------------
structure.Func_type("table定义测试",true)

t0 = {}
t_string = {"de","da","c"}
t_int = {2,3,6,5,1,4}
t_hash = {[2]=199, ["我"]="狄仕豪",[3]="哈哈哈",[5]=true,game = "dota",[1]=9,0,100}

for i,v in ipairs(t_hash) do
    print(i,v)
end
for i,v in pairs(t_hash) do
    print(i,v)
end

structure.Func_type("table定义测试",false)
------------------------------- 定义测试 -------------------------------


------------------------------- table操作 -------------------------------
structure.Func_type("table操作",true)

local data = {}
local buff = {4,8,9}
table.insert(data,2,{3,4})
table.insert(data,4,"测试插入")
table.insert(data,3,buff)
data.xx = {}
buff = nil
useful.printTable(data)



------------------------------- table引用特性 -------------------------------
structure.Func_type("引用特性",true)

local x = "测试数据1"
local tb = {"谁",true,1900}
table.insert(tb,x)
x = "测试数据2"         -- 字符串无引用特性，不会修改tb
useful.printTable(tb)
print()
x = {1,2,3}
table.insert(tb,x)
x[3] = 100
useful.printTable(tb)
print()

print(x)
x = {}
print(x)
useful.printTable(tb)



------------------------------- table动态定义 -------------------------------
structure.Func_type("动态定义",true)
local datas = {}
local buff
local temp
for i=1,5 do
    buff = {}
    buff.index = i
    buff.data = i*10
    table.insert(datas,buff)
    if i==3 then
        buff.data = i*10+5
        temp = buff
    end
end
temp.data = 0
useful.printTable(datas)
--useful.printTable(datas)


------------------------------- table动态删除 -------------------------------
structure.Func_type("动态删除",true)
-- 正向遍历删除会影响table长度和内容，因此建议反向遍历删除
for i=1,#datas do
    if i>2 and i<5 then
        table.remove(datas,i)
    end
end
useful.printTable(datas)


------------------------------- table排序 -------------------------------
structure.Func_type("排序",true)
-- 正向遍历删除会影响table长度和内容，因此建议反向遍历删除
local file = {}
file[1] = {["name"]="dsh" , ["age"]=24}
file[2] = {["name"]="zdd" , ["age"]=23}
file[9] = {["name"]="htm" , ["age"]=21}
file[4] = {["name"]="zrq" , ["age"]=23}

--local function cmp(x,y)
--    return x.age>=y.age
--end
--table.sort(file,cmp)
useful.printTable(file)


--------------------------------- table动态插入 -------------------------------
structure.Func_type("动态插入",true)
-- 正向遍历删除会影响table长度和内容，因此建议反向遍历删除
local file_copy = {}
file_copy[2] = {["name"]="zdd" , ["age"]=23}
file_copy[4] = {["name"]="zrq" , ["age"]=23}

for k,v in pairs(file) do
    if(file_copy[k]==nil) then
        print("没有"..k)
        file_copy[k] = v
    end
end
useful.printTable(file_copy)













