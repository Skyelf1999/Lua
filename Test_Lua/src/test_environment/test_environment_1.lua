---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 14563.
--- DateTime: 2022/4/29 16:57
---

require("structure")

var_1 = {}
var_1.a = {}
var_1.a.b = 10
var_2 = 5
var_3 = "dsh"

-- 查看全部的全局变量及其类型
for var in pairs(_G) do
    print(var,type(var))
end


------------------------------- 动态全局变量 -------------------------------
structure.Func_type("动态全局变量",true)

-- 用于访问类似"a.b.c.......z"的变量
function getfield(f)
    local v = _G
    for w in string.gmatch(f,"[%w_]+") do
        v = v[w]
    end
    return v
end

function setfield(f,v)
    local t = _G
    for w,d in string.gmatch(f,"([%w_]+)(%.?)") do
        if d == "." then
            t[w] = t[w] or {}
            t = t[w]    -- 向深处走
        else
            t[w] = v    -- 到达目标，赋值
        end
    end
end

print(getfield("var_1.a.b"))    --> 10
setfield("var_1.a.c",20)
print(getfield("var_1.a.c"))    --> 20

structure.Func_type("动态全局变量",false)
------------------------------- 动态全局变量 -------------------------------


------------------------------- 全局变量操作控制 -------------------------------
structure.Func_type("全局变量操作控制",true)

local declared = {}

setmetatable(_G,{
    __newindex = function(t,n,v)
        if not declared[n] then
            local w = debug.getinfo(2,"S").what
            if w~="main" and w~="C" then
                error("尝试修改未声明的全局变量" .. n,2)
            end
            declared[n]  =true
        end
        rawset(t,n,v)
    end,
    __index = function(_,n)
        if not declared[n] then
            error("尝试读取未声明的全局变量" .. n,2)
        else
            return nil
        end
    end
})

function declare(name,v)
    rawset(_G,name,v or false)
end

print(var_x)    --> 未声明的x

structure.Func_type("全局变量操作控制",false)
------------------------------- 全局变量操作控制 -------------------------------










